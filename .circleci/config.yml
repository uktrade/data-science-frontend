version: 2
aliases:
  - &node_version  node:12.18.0
  - &redis_version redis:3.2.10
  # Common steps
  - &restore_npm_cache
    restore_cache:
      name: Restore npm dependencies cache
      key: npm-dependency-{{ checksum "package.json" }}-{{ checksum "node_version" }}-{{ checksum "npm_version" }}
  - &store_versions
    run:
      name: Temporarily store node/npm versions on filesystem
      command: node --version > node_version; npm --version > npm_version

  # Data hub base docker container
  - &docker_data_hub_base
    image: ukti/data-hub-frontend-test:2.0.0

  # Data hub redis container
  - &docker_redis
    image: *redis_version

  - &docker_dt07_api_sandbox
    image: ukti/find-exporters-sandbox:latest

  - &wait_for_api_sandbox
    run:
      name: Wait for api sandbox
      command: dockerize -wait ${BACKEND_URL}/ping.xml -timeout 120s

  - &wait_for_frontend
    run:
      name: Wait for frontend
      command: dockerize -wait ${FRONTEND_URL}/ping/ -timeout 120s

  - &start_frontend
    run:
      name: Start App
      command: |
        npm install
        npm run clean
        npm run dev
        npm run watch:js:server
      when: always
      background: true

  - &find_exporters_base_envs
    FRONTEND_URL: http://localhost:8080
    BACKEND_URL: http://localhost:8002
    LOG_LEVEL: debug
    SSO_BYPASS: true
    SESSION_SECRET: x
    SSO_DOMAIN: x
    SSO_CLIENT: x
    SSO_SECRET: x
    SSO_PATH_AUTH: x
    SSO_PATH_TOKEN: x
    SSO_PATH_INTROSPECT: x
    SSO_REDIRECT_URI: x
    BACKEND_KEY: x
    BACKEND_USER: x
    NODE_ENV: development
    TZ: Europe/London

jobs:
  dependencies:
    docker:
      - image: *node_version
    working_directory: ~/data-science-frontend
    steps:
      - checkout
      - *store_versions
      - *restore_npm_cache
      - run: npm install
      - save_cache:
          name: Save npm dependencies cache
          key: npm-dependency-{{ checksum "package.json" }}-{{ checksum "node_version" }}-{{ checksum "npm_version" }}
          paths:
            - ~/data-science-frontend/node_modules
            - /root/.cache/Cypress

  lint_test:
    docker:
      - image: *node_version
    working_directory: ~/data-science-frontend
    steps:
      - checkout
      - *store_versions
      - *restore_npm_cache
      - run:
          name: Lint code
          command: npm run lint
          when: always

  unit_test:
    docker:
      - image: *node_version
        environment:
          <<: *find_exporters_base_envs
          REDIS_CACHING_DISABLED: true
    working_directory: ~/data-science-frontend
    steps:
      - checkout
      - *store_versions
      - *restore_npm_cache
      - run:
          name: Jest tests
          command: npm run test
          when: always

  functional_test:
    docker:
      - <<: *docker_data_hub_base
        environment:
          <<: *find_exporters_base_envs
          REDIS_CACHING_DISABLED: false
      - *docker_redis
      - *docker_dt07_api_sandbox
    working_directory: ~/data-science-frontend
    steps:
      - checkout
      - *wait_for_api_sandbox
      - *start_frontend
      - *wait_for_frontend
      - run:
          name: Cypress tests
          command: npm run test:functional
          when: always
      - store_artifacts:
          path: cypress/screenshots

  visual_test:
    docker:
      - <<: *docker_data_hub_base
        environment:
          <<: *find_exporters_base_envs
          REDIS_CACHING_DISABLED: false
          IS_REMOTE: true
      - *docker_redis
      - *docker_dt07_api_sandbox
    working_directory: ~/data-science-frontend
    steps:
      - checkout
      - *wait_for_api_sandbox
      - *start_frontend
      - *wait_for_frontend
      - run:
          name: Visual tests
          command: npm run test:visual
          when: always
      - store_artifacts:
          path: visual-screenshots
      - store_artifacts:
          path: visual-report

workflows:
  version: 2
  datasciencefe:
    jobs:
      - dependencies
      - lint_test:
          requires:
            - dependencies
      - unit_test:
          requires:
            - dependencies
      - functional_test:
          requires:
            - lint_test
            - unit_test
      - visual_test:
          requires:
            - functional_test
